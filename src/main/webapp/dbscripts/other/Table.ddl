## (C) Copyright IBM Corporation 2015.
##
## Licensed under the Apache License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
## http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.

# Each SQL statement in this file should terminate with a semicolon (;)
# Lines starting with the pound character (#) are considered as comments
DROP TABLE IF EXISTS HOLDINGEJB;
DROP TABLE IF EXISTS ACCOUNTPROFILEEJB;
DROP TABLE IF EXISTS QUOTEEJB;
DROP TABLE IF EXISTS KEYGENEJB;
DROP TABLE IF EXISTS ACCOUNTEJB;
DROP TABLE IF EXISTS ORDEREJB;


CREATE TABLE HOLDINGEJB
  (PURCHASEPRICE DECIMAL(14, 2) NULL,
   HOLDINGID INTEGER NOT NULL,
   QUANTITY DECIMAL NOT NULL,
   PURCHASEDATE TIMESTAMP(0) NULL,
   ACCOUNT_ACCOUNTID INTEGER NULL,
   QUOTE_SYMBOL VARCHAR(250) NULL);

ALTER TABLE HOLDINGEJB
  ADD CONSTRAINT PK_HOLDINGEJB PRIMARY KEY (HOLDINGID);

CREATE TABLE ACCOUNTPROFILEEJB
  (ADDRESS VARCHAR(250) NULL,
   PASSWD VARCHAR(250) NULL,
   USERID VARCHAR(250) NOT NULL,
   EMAIL VARCHAR(250) NULL,
   CREDITCARD VARCHAR(250) NULL,
   FULLNAME VARCHAR(250) NULL);

ALTER TABLE ACCOUNTPROFILEEJB
  ADD CONSTRAINT PK_ACCOUNTPROFILEEJB PRIMARY KEY (USERID);

CREATE TABLE QUOTEEJB
  (LOW DECIMAL(14, 2) NULL,
   OPEN1 DECIMAL(14, 2) NULL,
   VOLUME DECIMAL NOT NULL,
   PRICE DECIMAL(14, 2) NULL,
   HIGH DECIMAL(14, 2) NULL,
   COMPANYNAME VARCHAR(250) NULL,
   SYMBOL VARCHAR(250) NOT NULL,
   CHANGE1 DECIMAL NOT NULL);

ALTER TABLE QUOTEEJB
  ADD CONSTRAINT PK_QUOTEEJB PRIMARY KEY (SYMBOL);

CREATE TABLE KEYGENEJB
  (KEYVAL INTEGER NOT NULL,
   KEYNAME VARCHAR(250) NOT NULL);

ALTER TABLE KEYGENEJB
  ADD CONSTRAINT PK_KEYGENEJB PRIMARY KEY (KEYNAME);

INSERT INTO KEYGENEJB (KEYNAME,KEYVAL) VALUES ('account', 0);
INSERT INTO KEYGENEJB (KEYNAME,KEYVAL) VALUES ('holding', 0);
INSERT INTO KEYGENEJB (KEYNAME,KEYVAL) VALUES ('order', 0);
  
CREATE TABLE ACCOUNTEJB
  (CREATIONDATE TIMESTAMP(0) NULL,
   OPENBALANCE DECIMAL(14, 2) NULL,
   LOGOUTCOUNT INTEGER NOT NULL,
   BALANCE DECIMAL(14, 2) NULL,
   ACCOUNTID INTEGER NOT NULL,
   LASTLOGIN TIMESTAMP(0) NULL,
   LOGINCOUNT INTEGER NOT NULL,
   PROFILE_USERID VARCHAR(250) NULL);

ALTER TABLE ACCOUNTEJB
  ADD CONSTRAINT PK_ACCOUNTEJB PRIMARY KEY (ACCOUNTID);

CREATE TABLE ORDEREJB
  (ORDERFEE DECIMAL(14, 2) NULL,
   COMPLETIONDATE TIMESTAMP(0) NULL,
   ORDERTYPE VARCHAR(250) NULL,
   ORDERSTATUS VARCHAR(250) NULL,
   PRICE DECIMAL(14, 2) NULL,
   QUANTITY DECIMAL NOT NULL,
   OPENDATE TIMESTAMP(0) NULL,
   ORDERID INTEGER NOT NULL,
   ACCOUNT_ACCOUNTID INTEGER NULL,
   QUOTE_SYMBOL VARCHAR(250) NULL,
   HOLDING_HOLDINGID INTEGER NULL);

ALTER TABLE ORDEREJB
  ADD CONSTRAINT PK_ORDEREJB PRIMARY KEY (ORDERID);

CREATE INDEX ACCOUNT_USERID ON ACCOUNTEJB(PROFILE_USERID);
CREATE INDEX HOLDING_ACCOUNTID ON HOLDINGEJB(ACCOUNT_ACCOUNTID);
CREATE INDEX ORDER_ACCOUNTID ON ORDEREJB(ACCOUNT_ACCOUNTID);
CREATE INDEX ORDER_HOLDINGID ON ORDEREJB(HOLDING_HOLDINGID);
CREATE INDEX CLOSED_ORDERS ON ORDEREJB(ACCOUNT_ACCOUNTID,ORDERSTATUS);
