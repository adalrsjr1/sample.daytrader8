<server>
    <featureManager>
        <feature>ejb-3.2</feature>
        <feature>servlet-4.0</feature>
        <feature>jsf-2.3</feature>
        <feature>jpa-2.2</feature>
        <feature>mdb-3.2</feature>
        <feature>wasJmsServer-1.0</feature>
        <feature>wasJmsClient-2.0</feature>
        <feature>cdi-2.0</feature>
        <feature>websocket-1.1</feature>
        <feature>concurrent-1.0</feature>
        <feature>jsonp-1.1</feature>
        <feature>jsonb-1.0</feature>
        <feature>beanValidation-2.0</feature>
        <feature>jaxrs-2.1</feature>
        <feature>ssl-1.0</feature>
        <feature>mpMetrics-2.0</feature>
        <feature>mpHealth-2.0</feature>
        <feature>monitor-1.0</feature>
        <feature>requestTiming-1.0</feature>
    </featureManager>

	<mpMetrics authentication="false"/>

  <!--<requestTiming
			slowRequestThreshold="${TRACE_SLOW_REQUEST_THRESHOLD}"
			hungRequestThreshold="${TRACE_HUNG_REQUEST_THRESHOLD}"
			sampleRate="1"
  />-->

	<basicRegistry></basicRegistry>

    <!--<logging traceSpecification="daytrader=fine"/>-->
      <!--<logging traceSpecification="com.ibm.ws.threading.internal.ThreadPoolController=all=enabled" maxFileSize="1025" maxFiles="10" />-->
	<!-- allow reuse of 'busy' ports for fast server recycling on linux (where ports remain blocked for up to 2 mins after server stops) ${tradelite.http.port} set in bootstrap.properties -->
	<httpEndpoint host="*" httpPort="9080" httpsPort="9443" id="defaultHttpEndpoint">
		<httpOptions
				persistTimeout="${HTTP_PERSIST_TIMEOUT}"
				maxKeepAliveRequests="${HTTP_MAX_KEEP_ALIVE_REQUESTS}"/>
		<!-- https://openliberty.io/blog/2018/12/20/http-forwarded-header.html -->
		<remoteIp proxies="" useRemoteIpInAccessLog="false"/>
	</httpEndpoint>

	<!-- reuse idsession for multiple replicas -->
	<httpSession idReuse="true" />


	<webApplication id="daytrader8" location="io.openliberty.sample.daytrader8.war" name="daytrader8" context-root="daytrader"/>

	<keyStore id="defaultKeyStore" password="yourPassword" />

	<connectionManager agedTimeout="${CONMGR1_AGED_TIMEOUT}"
					   connectionTimeout="${CONMGR1_TIMEOUT}"
					   id="conMgr1"
					   maxIdleTime="${CONMGR1_MAX_IDLE_TIMEOUT}"
					   maxPoolSize="${CONMGR1_MAX_POOL_SIZE}"
					   minPoolSize="${CONMGR1_MIN_POOL_SIZE}"
					   purgePolicy="${CONMGR1_PURGE_POLICY}"
					   numConnectionsPerThreadLocal="${CONMGR1_CONN_PER_THREAD}"
					   reapTime="${CONMGR1_REAP_TIME}"/>

        <jdbcDriver id="DB2JCC" libraryRef="DB2JCCLib"/>
        <library id="DB2JCCLib" filesetRef="DB2JCCFileset"/>
        <fileset id="DB2JCCFileset" dir="${shared.resource.dir}/db2jars" includes="db2jcc4.jar"/>

        <authData id="TradeDataSourceAuthData" user="${env.dbUser}" password="${env.dbPass}"/>
        <authData id="TradeAdminAuthData" user="${env.dbUser}" password="${env.dbPass}"/>

        <dataSource jndiName="jdbc/TradeDataSource" jdbcDriverRef="DB2JCC" id="DefaultDataSource" connectionManagerRef="conMgr1" statementCacheSize="60" isolationLevel="TRANSACTION_READ_COMMITTED" type="javax.sql.ConnectionPoolDataSource">
          <properties serverName="${DB_ADDRESS}" portNumber="${DB_PORT}" databaseName="${DB_NAME}" driverType="4" user="${DB_USER}" password="${DB_PASS}"/>
        </dataSource>

	<messagingEngine id="defaultME">
		<queue id="TradeBrokerQueue"/>
		<topicSpace id="TradeTopicSpace"/>
	</messagingEngine>

	<jmsQueueConnectionFactory connectionManagerRef="ConMgr3" jndiName="jms/TradeBrokerQCF">
		<properties.wasJms/>
	</jmsQueueConnectionFactory>
	<connectionManager id="ConMgr3"
					   agedTimeout="${CONMGR3_AGED_TIMEOUT}"
					   connectionTimeout="${CONMGR3_TIMEOUT}"
					   maxIdleTime="${CONMGR3_MAX_IDLE_TIMEOUT}"
					   maxPoolSize="${CONMGR3_MAX_POOL_SIZE}"
					   minPoolSize="${CONMGR3_MIN_POOL_SIZE}"
					   purgePolicy="${CONMGR3_PURGE_POLICY}"
					   numConnectionsPerThreadLocal="${CONMGR3_CONN_PER_THREAD}"
					   reapTime="${CONMGR3_REAP_TIME}"/>

	<jmsTopicConnectionFactory connectionManagerRef="ConMgr4" jndiName="jms/TradeStreamerTCF">
		<properties.wasJms/>
	</jmsTopicConnectionFactory>
	<connectionManager id="ConMgr4"
					   agedTimeout="${CONMGR4_AGED_TIMEOUT}"
					   connectionTimeout="${CONMGR4_TIMEOUT}"
					   maxIdleTime="${CONMGR4_MAX_IDLE_TIMEOUT}"
					   maxPoolSize="${CONMGR4_MAX_POOL_SIZE}"
					   minPoolSize="${CONMGR4_MIN_POOL_SIZE}"
					   purgePolicy="${CONMGR4_PURGE_POLICY}"
					   numConnectionsPerThreadLocal="${CONMGR4_CONN_PER_THREAD}"
					   reapTime="${CONMGR4_REAP_TIME}"/>

	<jmsQueue id="TradeBrokerQueue" jndiName="jms/TradeBrokerQueue">
		<properties.wasJms deliveryMode="NonPersistent" queueName="TradeBrokerQueue"/>
	</jmsQueue>
	<jmsTopic id="TradeStreamerTopic" jndiName="jms/TradeStreamerTopic">
		<properties.wasJms deliveryMode="NonPersistent" topicSpace="TradeTopicSpace"/>
	</jmsTopic>
	<jmsActivationSpec id="io.openliberty.sample.daytrader8/DTBroker3MDB">
		<properties.wasJms destinationRef="TradeBrokerQueue"/>
	</jmsActivationSpec>
	<jmsActivationSpec id="io.openliberty.sample.daytrader8/DTStreamer3MDB">
		<properties.wasJms destinationRef="TradeStreamerTopic" destinationType="javax.jms.Topic"/>
	</jmsActivationSpec>

	<executor
			name="LargeThreadPool"
			id="default"
			coreThreads="${CORE_THREADS}"
			maxThreads="${MAX_THREADS}"
			keepAlive="60s"
			stealPolicy="LOCAL"
			rejectedWorkPolicy="CALLER_RUNS"/>
</server>
