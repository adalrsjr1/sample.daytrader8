<?xml version="1.0" encoding="UTF-8"?>
<server>
   <featureManager>
      <feature>ejb-3.2</feature>
      <feature>servlet-4.0</feature>
      <feature>jsf-2.3</feature>
      <feature>jpa-2.2</feature>
      <feature>mdb-3.2</feature>
      <feature>wasJmsServer-1.0</feature>
      <feature>wasJmsClient-2.0</feature>
      <feature>cdi-2.0</feature>
      <feature>websocket-1.1</feature>
      <feature>concurrent-1.0</feature>
      <feature>jsonp-1.1</feature>
      <feature>jsonb-1.0</feature>
      <feature>beanValidation-2.0</feature>
      <feature>jaxrs-2.1</feature>
      <feature>ssl-1.0</feature>
      <feature>mpMetrics-3.0</feature>
   </featureManager>

   <mpMetrics authentication="false" />
   <keyStore id="defaultKeyStore" password="yourPassword" />

   <!--<logging
   traceSpecification="daytrader=fine"/>-->

   <!-- <httpEndpoint
      host="*"
      httpPort="${default.http.port}"
      httpsPort="${default.https.port}"
      accessLoggingRef="accessLogging"
      id="defaultHttpEndpoint"
   > -->
   <httpEndpoint
      host="*"
      httpPort="${default.http.port}"
      httpsPort="${default.https.port}"
      id="defaultHttpEndpoint"
   >
      <tcpOptions soReuseAddr="true" />
      <httpOptions
				persistTimeout="${HTTP_PERSIST_TIMEOUT}"
				maxKeepAliveRequests="${HTTP_MAX_KEEP_ALIVE_REQUESTS}"/>
		<!-- https://openliberty.io/blog/2018/12/20/http-forwarded-header.html -->
		<remoteIp proxies="" useRemoteIpInAccessLog="false"/>
   </httpEndpoint>

   <!-- <httpAccessLogging id="accessLogging" /> -->

   <!-- reuse idsession for multiple replicas -->
	<httpSession idReuse="true" modifyActiveCountOnInvalidatedSession="false"/>

   <application location="io.openliberty.sample.daytrader8.war" type="war" context-root="/daytrader" />

   <connectionManager agedTimeout="${CONMGR1_AGED_TIMEOUT}"
					   connectionTimeout="${CONMGR1_TIMEOUT}"
					   id="conMgr1"
					   maxIdleTime="${CONMGR1_MAX_IDLE_TIMEOUT}"
					   maxPoolSize="${CONMGR1_MAX_POOL_SIZE}"
					   minPoolSize="${CONMGR1_MIN_POOL_SIZE}"
					   purgePolicy="${CONMGR1_PURGE_POLICY}"
					   numConnectionsPerThreadLocal="${CONMGR1_CONN_PER_THREAD}"
					   reapTime="${CONMGR1_REAP_TIME}"/>

   <jdbcDriver id="postgresql-driver"
      javax.sql.XADataSource="org.postgresql.xa.PGXADataSource"
      javax.sql.ConnectionPoolDataSource="org.postgresql.ds.PGConnectionPoolDataSource"
      libraryRef="postgresJDBCLib" />

   <variable name="postgres.lib"
      defaultValue="${shared.resource.dir}/PostgresLibs/postgresql-42.2.23.jar" />

   <library id="postgresJDBCLib">
      <file name="${postgres.lib}" />
   </library>

   <!-- <authData id="TradeDataSourceAuthData" user="${dbUser}" password="${dbPass}" /> -->
   <!-- <authData id="TradeAdminAuthData" user="${dbUser}" password="${dbPass}" /> -->

   <dataSource connectionManagerRef="conMgr1" id="DefaultDataSource"
      isolationLevel="TRANSACTION_READ_COMMITTED"
      jndiName="jdbc/TradeDataSource"
      statementCacheSize="60" type="javax.sql.ConnectionPoolDataSource"
      jdbcDriverRef="postgresql-driver">

      <properties serverName="${postgres.host}"
         portNumber="${postgres.port}"
         databaseName="${postgres.db}"
         user="${postgres.user}"
         password="${postgres.password}" />

   </dataSource>

   <messagingEngine id="defaultME">
		<queue id="TradeBrokerQueue"/>
		<topicSpace id="TradeTopicSpace"/>
	</messagingEngine>

	<jmsQueueConnectionFactory connectionManagerRef="ConMgr3" jndiName="jms/TradeBrokerQCF">
		<properties.wasJms/>
	</jmsQueueConnectionFactory>
	<connectionManager id="ConMgr3"
					   agedTimeout="${CONMGR3_AGED_TIMEOUT}"
					   connectionTimeout="${CONMGR3_TIMEOUT}"
					   maxIdleTime="${CONMGR3_MAX_IDLE_TIMEOUT}"
					   maxPoolSize="${CONMGR3_MAX_POOL_SIZE}"
					   minPoolSize="${CONMGR3_MIN_POOL_SIZE}"
					   purgePolicy="${CONMGR3_PURGE_POLICY}"
					   numConnectionsPerThreadLocal="${CONMGR3_CONN_PER_THREAD}"
					   reapTime="${CONMGR3_REAP_TIME}"/>

	<jmsTopicConnectionFactory connectionManagerRef="ConMgr4" jndiName="jms/TradeStreamerTCF">
		<properties.wasJms/>
	</jmsTopicConnectionFactory>
	<connectionManager id="ConMgr4"
					   agedTimeout="${CONMGR4_AGED_TIMEOUT}"
					   connectionTimeout="${CONMGR4_TIMEOUT}"
					   maxIdleTime="${CONMGR4_MAX_IDLE_TIMEOUT}"
					   maxPoolSize="${CONMGR4_MAX_POOL_SIZE}"
					   minPoolSize="${CONMGR4_MIN_POOL_SIZE}"
					   purgePolicy="${CONMGR4_PURGE_POLICY}"
					   numConnectionsPerThreadLocal="${CONMGR4_CONN_PER_THREAD}"
					   reapTime="${CONMGR4_REAP_TIME}"/>

	<jmsQueue id="TradeBrokerQueue" jndiName="jms/TradeBrokerQueue">
		<properties.wasJms deliveryMode="NonPersistent" queueName="TradeBrokerQueue"/>
	</jmsQueue>
	<jmsTopic id="TradeStreamerTopic" jndiName="jms/TradeStreamerTopic">
		<properties.wasJms deliveryMode="NonPersistent" topicSpace="TradeTopicSpace"/>
	</jmsTopic>
	<jmsActivationSpec id="io.openliberty.sample.daytrader8/DTBroker3MDB">
		<properties.wasJms destinationRef="TradeBrokerQueue"/>
	</jmsActivationSpec>
	<jmsActivationSpec id="io.openliberty.sample.daytrader8/DTStreamer3MDB">
		<properties.wasJms destinationRef="TradeStreamerTopic" destinationType="javax.jms.Topic"/>
	</jmsActivationSpec>

	<executor
			name="LargeThreadPool"
			id="default"
			coreThreads="${CORE_THREADS}"
			maxThreads="${MAX_THREADS}"
			keepAlive="60s"
			stealPolicy="LOCAL"
			rejectedWorkPolicy="CALLER_RUNS"/>
</server>